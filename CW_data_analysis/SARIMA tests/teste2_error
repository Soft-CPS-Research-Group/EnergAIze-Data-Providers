python .\teste2.py
            temp_max
date
2012-01-01      12.8
2012-01-02      10.6
2012-01-03      11.7
2012-01-04      12.2
2012-01-05       8.9
            temp_max
date
2014-01-01       7.2
2014-01-02      10.6
2014-01-03       8.9
2014-01-04       7.8
2014-01-05       8.3










2014-01-03       8.9
2014-01-04       7.8
2014-01-05       8.3






2014-01-03       8.9
2014-01-04       7.8
2014-01-05       8.3


2014-01-03       8.9
2014-01-04       7.8
2014-01-03       8.9
2014-01-03       8.9
2014-01-04       7.8
2014-01-05       8.3
RUNNING THE L-BFGS-B CODE

           * * *

Machine precision = 2.220D-16
 N =            5     M =           10
 This problem is unconstrained.

At X0         0 variables are exactly at the bounds

At iterate    0    f=  1.72099D+00    |proj g|=  5.39710D-01


 This problem is unconstrained.

At X0         0 variables are exactly at the bounds
 This problem is unconstrained.

 This problem is unconstrained.
 This problem is unconstrained.

 This problem is unconstrained.

At X0         0 variables are exactly at the bounds
 This problem is unconstrained.

At X0         0 variables are exactly at the bounds

 This problem is unconstrained.

At X0         0 variables are exactly at the bounds

 This problem is unconstrained.

At X0         0 variables are exactly at the bounds
 This problem is unconstrained.

 This problem is unconstrained.

At X0         0 variables are exactly at the bounds

 This problem is unconstrained.

At X0         0 variables are exactly at the bounds

 This problem is unconstrained.

At X0         0 variables are exactly at the bounds
 This problem is unconstrained.


At iterate    5    f=  1.41885D+00    |proj g|=  8.08449D-03

At iterate   10    f=  1.37037D+00    |proj g|=  2.82655D-03

At iterate   15    f=  1.36980D+00    |proj g|=  2.41254D-03

At iterate   20    f=  1.36974D+00    |proj g|=  6.14279D-05

At iterate   25    f=  1.36972D+00    |proj g|=  8.96067D-04

           * * *

Tit   = total number of iterations
Tnf   = total number of function evaluations
Tnint = total number of segments explored during Cauchy searches
Skip  = number of BFGS updates skipped
Nact  = number of active bounds at final generalized Cauchy point
Projg = norm of the final projected gradient
F     = final function value

           * * *

   N    Tit     Tnf  Tnint  Skip  Nact     Projg        F
    5     29     42      1     0     0   9.404D-06   1.370D+00
  F =   1.3697166526165039

CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL
Traceback (most recent call last):
  File "C:\Users\Clarisse\Documents\Laboratório\EnergAIze-Data-Providers\CW_data_analysis\SARIMA tests\teste2.py", line 37, in <module>
    print("Sarting to fit the model...")
              ^^^^^^^^^^^
  File "C:\Users\Clarisse\Documents\Laboratório\EnergAIze-Data-Providers\edp\Lib\site-packages\statsmodels\tsa\statespace\mlemodel.py", line 729, in fit
    res = func(mlefit.params, transformed=False, includes_fixed=False,
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Clarisse\Documents\Laboratório\EnergAIze-Data-Providers\edp\Lib\site-packages\statsmodels\tsa\statespace\mlemodel.py", line 887, in smooth
    result = self.ssm.smooth(complex_step=complex_step, **kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Clarisse\Documents\Laboratório\EnergAIze-Data-Providers\edp\Lib\site-packages\statsmodels\tsa\statespace\kalman_smoother.py", line 419, in smooth
    smoother = self._smooth(smoother_output, results=results, **kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Clarisse\Documents\Laboratório\EnergAIze-Data-Providers\edp\Lib\site-packages\statsmodels\tsa\statespace\kalman_smoother.py", line 355, in _smooth
    self._initialize_smoother(
  File "C:\Users\Clarisse\Documents\Laboratório\EnergAIze-Data-Providers\edp\Lib\site-packages\statsmodels\tsa\statespace\kalman_smoother.py", line 179, in _initialize_smoother
    self._kalman_smoothers[prefix] = cls(
                                     ^^^^
  File "statsmodels\\tsa\\statespace\\_kalman_smoother.pyx", line 964, in statsmodels.tsa.statespace._kalman_smoother.dKalmanSmoother.__init__
  File "statsmodels\\tsa\\statespace\\_kalman_smoother.pyx", line 1134, in statsmodels.tsa.statespace._kalman_smoother.dKalmanSmoother.set_smoother_output
  File "statsmodels\\tsa\\statespace\\_kalman_smoother.pyx", line 1168, in statsmodels.tsa.statespace._kalman_smoother.dKalmanSmoother.reset
  File "statsmodels\\tsa\\statespace\\_kalman_smoother.pyx", line 1121, in statsmodels.tsa.statespace._kalman_smoother.dKalmanSmoother.reset_filter_method
  File "statsmodels\\tsa\\statespace\\_kalman_smoother.pyx", line 988, in statsmodels.tsa.statespace._kalman_smoother.dKalmanSmoother.allocate_arrays
numpy.core._exceptions._ArrayMemoryError: Unable to allocate 2.93 GiB for an array with shape (733, 733, 731) and data type float64